include:
  - project: "${CI_PROJECT_PATH}"
    ref: "${CI_COMMIT_SHA}"
    file: templates/validate-codeowners.yml
    inputs:
      GITLAB_TOKEN: ${GITLAB_TOKEN}

variables:
  WORKS:       "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/my_package/0.0.3/validate-codeowners"
  PACKAGE_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/linux_amd64/${CI_COMMIT_TAG}/validate-codeowners"
  IMAGE_UI_URL: "https://gitlab.com/tedspinks/validate-codeowners/container_registry/6404913?orderBy=NAME&sort=asc&search[]=$CI_COMMIT_TAG"

stages:
- build
- test
- release

compile:
  stage: build
  image: golang:latest
  script:
    - go get
    - go vet
    - CGO_ENABLED=0 go build
  artifacts:
    paths:
      - validate-codeowners
  rules:
    - if: $CI_COMMIT_TAG =~ /^v/
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - Dockerfile
        - "**/*.go"
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
      allow_failure: true

build-image:
  stage: build
  needs:
    - compile
  image:
    name: gcr.io/kaniko-project/executor:v1.23.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${IMAGE_TAG}"
      --destination "${CI_REGISTRY_IMAGE}:latest"
  rules:
    - if: $CI_COMMIT_TAG =~ /^v/
      variables:
        IMAGE_TAG: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - Dockerfile
        - "**/*.go"
      variables:
        IMAGE_TAG: $CI_COMMIT_SHORT_SHA
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
      allow_failure: true
      variables:
        IMAGE_TAG: $CI_COMMIT_SHORT_SHA

test-valid-codeowners:
  extends: .validate-codeowners

.test-failure:
  extends: .validate-codeowners
  script:
    - |
      echo Disable error checking before running failure test
      set +e
    - /gitlab/validate-codeowners | tee $CI_JOB_NAME.test
    - |
      echo Re-enable error checking
      set -e

test-bad-syntax:
  extends: .test-failure
  script:
    # Remove ./CODEOWNERS so that it validates ./docs/CODEOWNERS
    - rm ./CODEOWNERS
    - !reference [.test-failure, script]
    - diff $CI_JOB_NAME.test tests/CODEOWNERS.bad-syntax.test

test-bad-owner-patterns:
  extends: .test-failure
  script:
    - cp tests/CODEOWNERS.bad-owners ./CODEOWNERS
    - !reference [.test-failure, script]
    - diff $CI_JOB_NAME.test tests/CODEOWNERS.bad-owners.test

test-bad-filepath-patterns:
  extends: .test-failure
  script:
    - cp tests/CODEOWNERS.bad-paths ./CODEOWNERS
    - !reference [.test-failure, script]
    - diff $CI_JOB_NAME.test tests/CODEOWNERS.bad-paths.test

publish-binary:
  stage: release
  image: curlimages/curl:latest
  script:
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file validate-codeowners "${PACKAGE_URL}" | tee result.txt'
    - grep "201 Created" result.txt
  rules:
    - if: $CI_COMMIT_TAG =~ /^v/

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "Release job for $CI_COMMIT_TAG"
  rules:
    # If tag starts with "v" then create a release
    - if: $CI_COMMIT_TAG =~ /^v/
  release:
    tag_name: $CI_COMMIT_TAG
    description: $CI_COMMIT_TAG_MESSAGE
    assets:
      links:
        - name: Container image
          url: ${IMAGE_UI_URL}
          link_type: image
        - name: Linux binary
          url: ${PACKAGE_URL}
          filepath: /linux-amd64/validate-codeowners
          link_type: other
